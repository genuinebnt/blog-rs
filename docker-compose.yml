services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - APP_ENVIRONMENT=${APP_ENVIRONMENT:-development}
      - APP_APPLICATION__HOST=${APP_APPLICATION__HOST}
      - APP_APPLICATION__PORT=${APP_APPLICATION__PORT}
      - APP_DATABASE__USERNAME=${APP_DATABASE__USERNAME}
      - APP_DATABASE__PASSWORD=${APP_DATABASE__PASSWORD}
      - APP_DATABASE__HOST=${APP_DATABASE__HOST}
      - APP_DATABASE__PORT=${APP_DATABASE__PORT}
      - APP_DATABASE__DATABASE_NAME=${APP_DATABASE__DATABASE_NAME}
      - APP_DATABASE__REQUIRE_SSL=${APP_DATABASE__REQUIRE_SSL}
    volumes:
      # Only mount source code in development
      - ${VOLUME_MOUNT:-/dev/null}:/app/src
      - ${CARGO_MOUNT:-/dev/null}:/usr/local/cargo/registry
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-myapp}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    restart: unless-stopped

  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "${REDIS_PORT:-6379}:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - app-network

volumes:
  postgres_data:
  redis_data:
  cargo-cache:
  target-cache:
